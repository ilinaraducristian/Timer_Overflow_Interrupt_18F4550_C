

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 12 16:45:25 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _TMR0L	set	4054
    50  0000                     _TMR0H	set	4055
    51  0000                     _T0CON	set	4053
    52  0000                     _RCONbits	set	4048
    53  0000                     _INTCON3	set	4080
    54  0000                     _INTCON2	set	4081
    55  0000                     _INTCON	set	4082
    56  0000                     _LATD	set	3980
    57  0000                     _TRISD	set	3989
    58  0000                     _LATC	set	3979
    59  0000                     _TRISC	set	3988
    60  0000                     _LATB	set	3978
    61  0000                     _TRISB	set	3987
    62  0000                     _LATA	set	3977
    63  0000                     _TRISA	set	3986
    64  0000                     _INTCONbits	set	4082
    65                           
    66                           ; #config settings
    67                           
    68                           	psect	cinit
    69  000076                     __pcinit:
    70                           	opt callstack 0
    71  000076                     start_initialization:
    72                           	opt callstack 0
    73  000076                     __initialization:
    74                           	opt callstack 0
    75  000076                     end_of_initialization:
    76                           	opt callstack 0
    77  000076                     __end_of__initialization:
    78                           	opt callstack 0
    79  000076  9003               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    80  000078  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    81  00007A  0100               	movlb	0
    82  00007C  EF16  F000         	goto	_main	;jump to C main() function
    83                           
    84                           	psect	cstackCOMRAM
    85  000001                     __pcstackCOMRAM:
    86                           	opt callstack 0
    87  000001                     ??_ISRL:
    88  000001                     
    89                           ; 1 bytes @ 0x0
    90  000001                     	ds	1
    91  000002                     main@x:
    92                           	opt callstack 0
    93                           
    94                           ; 1 bytes @ 0x1
    95  000002                     	ds	1
    96                           
    97 ;;
    98 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    99 ;;
   100 ;; *************** function _main *****************
   101 ;; Defined at:
   102 ;;		line 21 in file "main.c"
   103 ;; Parameters:    Size  Location     Type
   104 ;;		None
   105 ;; Auto vars:     Size  Location     Type
   106 ;;  x               1    1[COMRAM] unsigned char 
   107 ;; Return value:  Size  Location     Type
   108 ;;                  1    wreg      void 
   109 ;; Registers used:
   110 ;;		wreg, status,2, status,0
   111 ;; Tracked objects:
   112 ;;		On entry : 0/0
   113 ;;		On exit  : 0/0
   114 ;;		Unchanged: 0/0
   115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   116 ;;      Params:         0       0       0       0       0       0       0       0       0
   117 ;;      Locals:         1       0       0       0       0       0       0       0       0
   118 ;;      Temps:          0       0       0       0       0       0       0       0       0
   119 ;;      Totals:         1       0       0       0       0       0       0       0       0
   120 ;;Total ram usage:        1 bytes
   121 ;; Hardware stack levels required when called:    2
   122 ;; This function calls:
   123 ;;		Nothing
   124 ;; This function is called by:
   125 ;;		Startup code after reset
   126 ;; This function uses a non-reentrant model
   127 ;;
   128                           
   129                           	psect	text0
   130  00002C                     __ptext0:
   131                           	opt callstack 0
   132  00002C                     _main:
   133                           	opt callstack 29
   134  00002C                     
   135                           ;main.c: 22:     TRISA = 0;
   136  00002C  0E00               	movlw	0
   137  00002E  6E92               	movwf	146,c	;volatile
   138                           
   139                           ;main.c: 23:     LATA = 0;
   140  000030  0E00               	movlw	0
   141  000032  6E89               	movwf	137,c	;volatile
   142                           
   143                           ;main.c: 24:     TRISB = 0;
   144  000034  0E00               	movlw	0
   145  000036  6E93               	movwf	147,c	;volatile
   146                           
   147                           ;main.c: 25:     LATB = 0;
   148  000038  0E00               	movlw	0
   149  00003A  6E8A               	movwf	138,c	;volatile
   150                           
   151                           ;main.c: 26:     TRISC = 0;
   152  00003C  0E00               	movlw	0
   153  00003E  6E94               	movwf	148,c	;volatile
   154                           
   155                           ;main.c: 27:     LATC = 0;
   156  000040  0E00               	movlw	0
   157  000042  6E8B               	movwf	139,c	;volatile
   158                           
   159                           ;main.c: 28:     TRISD = 0;
   160  000044  0E00               	movlw	0
   161  000046  6E95               	movwf	149,c	;volatile
   162                           
   163                           ;main.c: 29:     LATD = 0;
   164  000048  0E00               	movlw	0
   165  00004A  6E8C               	movwf	140,c	;volatile
   166                           
   167                           ;main.c: 31:     INTCON = 0b11100000;
   168  00004C  0EE0               	movlw	224
   169  00004E  6EF2               	movwf	242,c	;volatile
   170                           
   171                           ;main.c: 32:     INTCON2 = 0b00000000;
   172  000050  0E00               	movlw	0
   173  000052  6EF1               	movwf	241,c	;volatile
   174                           
   175                           ;main.c: 33:     INTCON3 = 0;
   176  000054  0E00               	movlw	0
   177  000056  6EF0               	movwf	240,c	;volatile
   178  000058                     
   179                           ;main.c: 34:     RCONbits.IPEN = 1;
   180  000058  8ED0               	bsf	208,7,c	;volatile
   181                           
   182                           ;main.c: 35:     T0CON = 0b11001000;
   183  00005A  0EC8               	movlw	200
   184  00005C  6ED5               	movwf	213,c	;volatile
   185                           
   186                           ;main.c: 36:     TMR0H = 0;
   187  00005E  0E00               	movlw	0
   188  000060  6ED7               	movwf	215,c	;volatile
   189                           
   190                           ;main.c: 37:     TMR0L = 0;
   191  000062  0E00               	movlw	0
   192  000064  6ED6               	movwf	214,c	;volatile
   193  000066                     
   194                           ;main.c: 38:     unsigned char x = 255;
   195  000066  6802               	setf	main@x^0,c
   196  000068                     
   197                           ;main.c: 39:     x >>= 4;
   198  000068  3A02               	swapf	main@x^0,f,c
   199  00006A  0E0F               	movlw	15
   200  00006C  1602               	andwf	main@x^0,f,c
   201  00006E                     l47:
   202  00006E  EF37  F000         	goto	l47
   203  000072  EF14  F000         	goto	start
   204  000076                     __end_of_main:
   205                           	opt callstack 0
   206                           
   207 ;; *************** function _ISRL *****************
   208 ;; Defined at:
   209 ;;		line 16 in file "main.c"
   210 ;; Parameters:    Size  Location     Type
   211 ;;		None
   212 ;; Auto vars:     Size  Location     Type
   213 ;;		None
   214 ;; Return value:  Size  Location     Type
   215 ;;                  1    wreg      void 
   216 ;; Registers used:
   217 ;;		None
   218 ;; Tracked objects:
   219 ;;		On entry : 0/0
   220 ;;		On exit  : 0/0
   221 ;;		Unchanged: 0/0
   222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   223 ;;      Params:         0       0       0       0       0       0       0       0       0
   224 ;;      Locals:         0       0       0       0       0       0       0       0       0
   225 ;;      Temps:          1       0       0       0       0       0       0       0       0
   226 ;;      Totals:         1       0       0       0       0       0       0       0       0
   227 ;;Total ram usage:        1 bytes
   228 ;; Hardware stack levels used:    1
   229 ;; Hardware stack levels required when called:    1
   230 ;; This function calls:
   231 ;;		Nothing
   232 ;; This function is called by:
   233 ;;		Interrupt level 1
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           	psect	intcodelo
   238  000018                     __pintcodelo:
   239                           	opt callstack 0
   240  000018                     _ISRL:
   241                           	opt callstack 29
   242                           
   243                           ;incstack = 0
   244  000018  8003               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   245  00001A  CFE0 F001          	movff	bsr,??_ISRL
   246  00001E                     
   247                           ;main.c: 17:     INTCONbits.TMR0IF = 0;
   248  00001E  94F2               	bcf	242,2,c	;volatile
   249  000020  C001  FFE0         	movff	??_ISRL,bsr
   250  000024  9003               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   251  000026  0010               	retfie	
   252  000028                     __end_of_ISRL:
   253                           	opt callstack 0
   254                           
   255 ;; *************** function _ISRH *****************
   256 ;; Defined at:
   257 ;;		line 11 in file "main.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		None
   266 ;; Tracked objects:
   267 ;;		On entry : 0/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   271 ;;      Params:         0       0       0       0       0       0       0       0       0
   272 ;;      Locals:         0       0       0       0       0       0       0       0       0
   273 ;;      Temps:          0       0       0       0       0       0       0       0       0
   274 ;;      Totals:         0       0       0       0       0       0       0       0       0
   275 ;;Total ram usage:        0 bytes
   276 ;; Hardware stack levels used:    1
   277 ;; This function calls:
   278 ;;		Nothing
   279 ;; This function is called by:
   280 ;;		Interrupt level 2
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           	psect	intcode
   285  000008                     __pintcode:
   286                           	opt callstack 0
   287  000008                     _ISRH:
   288                           	opt callstack 29
   289                           
   290                           ;incstack = 0
   291  000008  8203               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   292  00000A  ED40  F000         	call	int_func,f	;refresh shadow registers
   293                           
   294                           	psect	intcode_body
   295  000080                     __pintcode_body:
   296                           	opt callstack 29
   297  000080                     int_func:
   298                           	opt callstack 29
   299  000080  0006               	pop		; remove dummy address from shadow register refresh
   300  000082                     
   301                           ;main.c: 12:     INTCONbits.TMR0IF = 0;
   302  000082  94F2               	bcf	242,2,c	;volatile
   303  000084  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   304  000086  0011               	retfie		f
   305  000088                     __end_of_ISRH:
   306                           	opt callstack 0
   307  0000                     
   308                           	psect	rparam
   309  0000                     
   310                           	psect	temp
   311  000003                     btemp:
   312                           	opt callstack 0
   313  000003                     	ds	1
   314  0000                     int$flags	set	btemp
   315  0000                     wtemp8	set	btemp+1
   316  0000                     ttemp5	set	btemp+1
   317  0000                     ttemp6	set	btemp+4
   318  0000                     ttemp7	set	btemp+8
   319                           tosu	equ	0xFFF
   320                           tosh	equ	0xFFE
   321                           tosl	equ	0xFFD
   322                           stkptr	equ	0xFFC
   323                           pclatu	equ	0xFFB
   324                           pclath	equ	0xFFA
   325                           pcl	equ	0xFF9
   326                           tblptru	equ	0xFF8
   327                           tblptrh	equ	0xFF7
   328                           tblptrl	equ	0xFF6
   329                           tablat	equ	0xFF5
   330                           prodh	equ	0xFF4
   331                           prodl	equ	0xFF3
   332                           indf0	equ	0xFEF
   333                           postinc0	equ	0xFEE
   334                           postdec0	equ	0xFED
   335                           preinc0	equ	0xFEC
   336                           plusw0	equ	0xFEB
   337                           fsr0h	equ	0xFEA
   338                           fsr0l	equ	0xFE9
   339                           wreg	equ	0xFE8
   340                           indf1	equ	0xFE7
   341                           postinc1	equ	0xFE6
   342                           postdec1	equ	0xFE5
   343                           preinc1	equ	0xFE4
   344                           plusw1	equ	0xFE3
   345                           fsr1h	equ	0xFE2
   346                           fsr1l	equ	0xFE1
   347                           bsr	equ	0xFE0
   348                           indf2	equ	0xFDF
   349                           postinc2	equ	0xFDE
   350                           postdec2	equ	0xFDD
   351                           preinc2	equ	0xFDC
   352                           plusw2	equ	0xFDB
   353                           fsr2h	equ	0xFDA
   354                           fsr2l	equ	0xFD9
   355                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISRL in COMRAM

    None.

Critical Paths under _ISRH in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISRL in BANK0

    None.

Critical Paths under _ISRH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISRL in BANK1

    None.

Critical Paths under _ISRH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISRL in BANK2

    None.

Critical Paths under _ISRH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRL in BANK3

    None.

Critical Paths under _ISRH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRL in BANK4

    None.

Critical Paths under _ISRH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRL in BANK5

    None.

Critical Paths under _ISRH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRL in BANK6

    None.

Critical Paths under _ISRH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRL in BANK7

    None.

Critical Paths under _ISRH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISRL                                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISRH                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISRL (ROOT)

 _ISRH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 12 16:45:25 2019

                     l47 006E                       l48 006E                       bsr 000FE0  
                    l730 002C                      l732 0058                      l734 0066  
                    l736 0068                     _LATA 000F89                     _LATB 000F8A  
                   _LATC 000F8B                     _LATD 000F8C                     i1l42 0020  
                   i2l37 0084                     _ISRH 0008                     _ISRL 0018  
                   _main 002C                     btemp 0003                     start 0028  
           ___param_bank 000000                    ?_ISRH 0001                    ?_ISRL 0001  
                  ?_main 0001                    _T0CON 000FD5                    i1l728 001E  
                  i2l726 0082                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    main@x 0002                    ttemp5 0004  
                  ttemp6 0007                    ttemp7 000B                    wtemp8 0004  
           __end_of_ISRH 0088             __end_of_ISRL 0028          __initialization 0076  
           __end_of_main 0076                   ??_ISRH 0001                   ??_ISRL 0001  
                 ??_main 0002            __activetblptr 000000                   _INTCON 000FF2  
             __accesstop 0060  __end_of__initialization 0076            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  _INTCON2 000FF1                  _INTCON3 000FF0  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0076  
                __ramtop 0800                  __ptext0 002C           __pintcode_body 0080  
   end_of_initialization 0076                  int_func 0080      start_initialization 0076  
              __pintcode 0008              __pintcodelo 0018                 _RCONbits 000FD0  
               __Hrparam 0000                 __Lrparam 0000            __size_of_ISRH 0080  
          __size_of_ISRL 0010            __size_of_main 004A                 int$flags 0003  
             _INTCONbits 000FF2                 intlevel1 0000                 intlevel2 0000  
